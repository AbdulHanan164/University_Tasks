{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "21f40ba1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Input the stringhanan\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "not all arguments converted during string formatting",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[17], line 6\u001b[0m\n\u001b[0;32m      4\u001b[0m Odd\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m (\u001b[38;5;28mlen\u001b[39m(str_input)):\n\u001b[1;32m----> 6\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m(\u001b[38;5;28mstr\u001b[39m[i]\u001b[38;5;241m%\u001b[39m\u001b[38;5;241m2\u001b[39m\u001b[38;5;241m==\u001b[39m\u001b[38;5;241m0\u001b[39m):\n\u001b[0;32m      7\u001b[0m         Even\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mstr\u001b[39m[i]  \n\u001b[0;32m      8\u001b[0m         frequency\u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m\n",
      "\u001b[1;31mTypeError\u001b[0m: not all arguments converted during string formatting"
     ]
    }
   ],
   "source": [
    "str=input(\"Input the string\")\n",
    "frequency=0;\n",
    "Even=''\n",
    "Odd=''\n",
    "for i in range (len(str_input)):\n",
    "    if(str[i]%2==0):\n",
    "        Even=str[i]  \n",
    "        frequency+=1\n",
    "        if frequency>=2:\n",
    "            print(Even)\n",
    "            print(\"Even number\")\n",
    "    else:\n",
    "        Odd=str[i]\n",
    "        frequency+=1\n",
    "        if frequency==1 or frequency>i+2:\n",
    "            print(Odd)\n",
    "            print(\"Odd number\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "12f2c78b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Input the string: hamza\n",
      "The string is odd.\n",
      "Even characters: ['a']\n",
      "Odd characters: ['h', 'm', 'z']\n"
     ]
    }
   ],
   "source": [
    "str_input = input(\"Input the string: \")\n",
    "\n",
    "char_count = {}  # Create a dictionary to store character frequencies\n",
    "\n",
    "for char in str_input:\n",
    "    # Check if the character is a letter (lowercase or uppercase) or a digit\n",
    "    if ('a' <= char <= 'z' or 'A' <= char <= 'Z' or '0' <= char <= '9'):\n",
    "        char_count[char] = char_count.get(char, 0) + 1\n",
    "\n",
    "even_chars = []\n",
    "odd_chars = []\n",
    "\n",
    "for char, count in char_count.items():\n",
    "    if count % 2 == 0:\n",
    "        even_chars.append(char)\n",
    "    else:\n",
    "        odd_chars.append(char)\n",
    "\n",
    "if len(even_chars) == len(char_count):\n",
    "    print(\"The string is even.\")\n",
    "else:\n",
    "    print(\"The string is odd.\")\n",
    "\n",
    "print(\"Even characters:\", even_chars)\n",
    "print(\"Odd characters:\", odd_chars)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ca074dd8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "023da86a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
